name: Project card - 🔍 Review

on:
  pull_request:
    types: [opened, ready_for_review]

jobs:
  automate-project-columns:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GHPROJECT_TOKEN }}
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to retrieve tags
      - id: echo
        run: |
          echo ${{ github.event.pull_request.title }}
          echo ${{ github.event.pull_request.user.name }}
          echo ${{ github.event.pull_request.user.email }}
          echo ${{ github.event.pull_request.user.login }}
          echo ${{ github.event.pull_request.user.id }}
          echo ${{ github.event.pull_request.user.node_id }}
          echo ${{ github.event.pull_request.user.avatar_url }}
          echo ${{ github.event.pull_request.user.gravatar_id }}
          echo ${{ github.event.pull_request.user.url }}
          echo ${{ github.event.pull_request.user.html_url }}
          echo ${{ github.event.pull_request.user.followers_url }}
          echo ${{ github.event.pull_request.user.following_url }}
          echo ${{ github.event.pull_request.user.gists_url }}
          echo ${{ github.event.pull_request.user.starred_url }}
          echo ${{ github.event.pull_request.user.subscriptions_url }}
          echo ${{ github.event.pull_request.user.organizations_url }}
          echo ${{ github.event.pull_request.user.repos_url }}
          echo ${{ github.event.pull_request.user.events_url }}
          echo ${{ github.event.pull_request.user.received_events_url }}
          echo ${{ github.event.pull_request.user.type }}
          echo ${{ github.event.pull_request.user.site_admin }}
          echo ${{ github.event.pull_request.user.starred_at }} 
          echo ${{ github.event.pull_request.body }}
          echo ${{ github.event.pull_request.labels }}
          echo ${{ github.event.pull_request.milestone }}
          echo ${{ github.event.pull_request.active_lock_reason }}
          echo ${{ github.event.pull_request.created_at }}
          echo ${{ github.event.pull_request.updated_at }}
          echo ${{ github.event.pull_request.closed_at }}
          echo ${{ github.event.pull_request.merged_at }}
          echo ${{ github.event.pull_request.merge_commit_sha }}
          echo ${{ github.event.pull_request.assignee }}
          echo ${{ github.event.pull_request.assignees }}
          echo ${{ github.event.pull_request.requested_reviewers }}
          echo ${{ github.event.pull_request.requested_teams }}
          echo ${{ github.event.pull_request.head }}
          echo ${{ github.event.pull_request.base }}
          echo ${{ github.event.pull_request._links }}
          echo ${{ github.event.pull_request.author_association }}
          echo ${{ github.event.pull_request.auto_merge }}
          echo ${{ github.event.pull_request.draft }}
          echo ${{ github.event.pull_request.merged }}
          echo ${{ github.event.pull_request.mergeable }}
          echo ${{ github.event.pull_request.rebaseable }}
          echo ${{ github.event.pull_request.mergeable_state }}
          echo ${{ github.event.pull_request.merged_by }}
          echo ${{ github.event.pull_request.comments }}
          echo ${{ github.event.pull_request.review_comments }}
          echo ${{ github.event.pull_request.maintainer_can_modify }}
          echo ${{ github.event.pull_request.commits }}
          echo ${{ github.event.pull_request.additions }}
          echo ${{ github.event.pull_request.deletions }}
          echo ${{ github.event.pull_request.changed_files }}
          echo ${{ github.event.pull_request.allow_auto_merge }}
          echo ${{ github.event.pull_request.allow_update_branch }}
          echo ${{ github.event.pull_request.delete_branch_on_merge }}
          echo ${{ github.event.pull_request.merge_commit_message }}
          echo ${{ github.event.pull_request.merge_commit_title }}
          echo ${{ github.event.pull_request.squash_merge_commit_message }}
          echo ${{ github.event.pull_request.squash_merge_commit_title }}
          echo ${{ github.event.pull_request.use_squash_pr_title_as_default }}
          echo ${{ github.event.repository }}
          echo ${{ github.event.sender }}
#          echo ${{ github.event.action }} -> opened
#          echo ${{ github.event.enterprise }} ->
#          echo ${{ github.event.installation }} ->
#          echo ${{ github.event.number }} -> 95
#          echo ${{ github.event.organization }} ->
#          echo ${{ github.event.pull_request.url }} -> https://api.github.com/repos/AidaAP/topup-gateway-test/pulls/95
#          echo ${{ github.event.pull_request.id }} -> 1729341372
#          echo ${{ github.event.pull_request.node_id }} -> PR_kwDOLLb96M5nE6e8
#          echo ${{ github.event.pull_request.html_url }} -> https://github.com/AidaAP/topup-gateway-test/pull/95
#          echo ${{ github.event.pull_request.diff_url }} -> https://github.com/AidaAP/topup-gateway-test/pull/95.diff
#          echo ${{ github.event.pull_request.patch_url }} -> https://github.com/AidaAP/topup-gateway-test/pull/95.patch
#          echo ${{ github.event.pull_request.issue_url }} -> https://api.github.com/repos/AidaAP/topup-gateway-test/issues/95
#          echo ${{ github.event.pull_request.commits_url }} -> https://api.github.com/repos/AidaAP/topup-gateway-test/pulls/95/commits
#          echo ${{ github.event.pull_request.review_comments_url }} -> https://api.github.com/repos/AidaAP/topup-gateway-test/pulls/95/comments
#          echo ${{ github.event.pull_request.review_comment_url }} -> https://api.github.com/repos/AidaAP/topup-gateway-test/pulls/comments{/number}
#          echo ${{ github.event.pull_request.comments_url }} -> https://api.github.com/repos/AidaAP/topup-gateway-test/issues/95/comments
#          echo ${{ github.event.pull_request.statuses_url }} -> https://api.github.com/repos/AidaAP/topup-gateway-test/statuses/e5e7aac60e4b55dad551affe9e3e75c1e7a16cc5
#          echo ${{ github.event.pull_request.number }} -> 95
#          echo ${{ github.event.pull_request.state }} -> open
#          echo ${{ github.event.pull_request.locked }} -> false

#      - id: obtain_ids
#        run: |
#          echo "PROJECT_ID=$(gh project list --owner "AidaAP" --format=json | jq '.projects[] | select(.number==2) | .id')" >> $GITHUB_ENV
#          echo "ISSUE_ID=$(gh project item-list 2 --owner "AidaAP" --format=json | jq '.items[] | select(.content.type=="Issue" and .content.number==${{ github.event.issue.number }}) | .id')" >> $GITHUB_ENV
#          echo "FIELD_ID=$(gh project field-list 2 --owner "AidaAP" --format=json | jq '.fields[] | select(.name=="Status") | .id')" >> $GITHUB_ENV
#          echo "FIELD_VALUE_ID=$(gh project field-list 2 --owner "AidaAP" --format=json | jq -r '.fields[] | select(.name=="Status") | .options[] | select(.name=="🔍 Review") | .id')" >> $GITHUB_ENV
#      - id: set_card_status_in_progress
#        run: gh project item-edit --project-id "${PROJECT_ID}" --id "${ISSUE_ID}" --field-id "${FIELD_ID}" --single-select-option-id ${FIELD_VALUE_ID}
